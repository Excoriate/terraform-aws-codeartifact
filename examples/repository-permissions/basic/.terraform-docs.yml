---
formatter: markdown table

sections:
  hide: []
  show:
    - inputs
    - outputs
    # Show modules called by this example (which is just the repository-permissions module)
    - modules
    # Do not show resources directly created by the example itself (usually none)
    # - resources

content: |-
  # Basic Example: AWS CodeArtifact Repository Permissions Module

  ## Overview
  > **Note:** This example demonstrates the basic usage of the `repository-permissions` module found in `modules/repository-permissions`. It applies a policy to an **existing** CodeArtifact repository.

  ### ðŸ”‘ Key Features Demonstrated
  - Calling the `repository-permissions` module with required inputs (`domain_name`, `repository_name`).
  - Using fixtures (`fixtures/*.tfvars`) to test different policy configurations:
    - Baseline read/describe/auth token permissions via principal lists.
    - Adding custom policy statements.
    - Combining baseline and custom statements.

  ### ðŸ“‹ Usage Guidelines
  1.  **Prerequisites:** Ensure you have an existing CodeArtifact Domain and Repository in the target AWS region.
  2.  **Configure:** Create a `.tfvars` file (or use one from `fixtures/`) specifying `domain_name` and `repository_name`. Define principals or custom statements as needed for the scenario.
      ```tfvars
      # example.tfvars
      domain_name     = "your-existing-codeartifact-domain"
      repository_name = "your-existing-codeartifact-repo"
      region          = "us-east-1" # Optional override

      # Example: Grant read access to a role
      # read_principals = ["arn:aws:iam::111122223333:role/ReadOnlyRole"]
      ```
  3.  **Initialize:** Run `terraform init`.
  4.  **Plan:** Run `terraform plan -var-file=example.tfvars`. Review the generated policy document in the plan output.
  5.  **Apply:** Run `terraform apply -var-file=example.tfvars`.
  6.  **Makefile:** Alternatively, use the provided `Makefile` targets (e.g., `make plan-read-only`, `make apply-cross-account`). Remember to set `domain_name` and `repository_name` in the corresponding fixture file first.

  {{ .Header }}

  ## Example Inputs

  {{ .Inputs }}

  ## Example Outputs

  {{ .Outputs }}

  ## Modules Called

  {{ .Modules }}

output:
  file: README.md
  mode: inject
  template: |-
    <!-- BEGIN_TF_DOCS -->
    {{ .Content }}
    <!-- END_TF_DOCS -->

settings:
  anchor: true
  color: true
  description: true
  escape: true
  header: true
  html: true
  indent: 2
  required: true
  sensitive: true
  type: true
